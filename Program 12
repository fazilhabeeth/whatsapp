Ex 12: Set Stored As A .Csv File Compute the Accuracy of the Classifier, 

Considering Few Data Sets

SOURCE CODE :

#Import csv file

import pandas as pd

from sklearn.model_selection import train_test_split

from sklearn.tree import DecisionTreeClassifier

from sklearn.metrics import accuracy_score

from sklearn.preprocessing import OneHotEncoder

# Step 1: Load the data

data = pd.read_csv(r'S:\fruit_data.csv')

# Step 2: Preprocess the data (example: fill missing values)

data.fillna(0, inplace=True)

# Encode categorical variables (one-hot encoding)

encoder = OneHotEncoder(sparse=False)

encoded_features = pd.DataFrame(encoder.fit_transform(data[['Color', 'Size']]))

encoded_features.columns = encoder.get_feature_names(['Color', 'Size'])

# Drop the original categorical columns and concatenate the encoded features

data = data.drop(['Color', 'Size'], axis=1)

data = pd.concat([data, encoded_features], axis=1)

# Assuming the last column is the target variable

X = data.drop('Label', axis=1)

y = data['Label']

# Step 3: Split the data

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 4: Train the classifier

classifier = DecisionTreeClassifier()

classifier.fit(X_train, y_train)

# Step 5: Predict and Evaluate

y_pred = classifier.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)

print(f'Accuracy: {accuracy:.2f}')
